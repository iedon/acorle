// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RpcRequestOut.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Acorle.Models {

  /// <summary>Holder for reflection information generated from RpcRequestOut.proto</summary>
  public static partial class RpcRequestOutReflection {

    #region Descriptor
    /// <summary>File descriptor for RpcRequestOut.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcRequestOutReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNScGNSZXF1ZXN0T3V0LnByb3RvEg1BY29ybGUuTW9kZWxzGhJIZWFkZXJL",
            "VlBhaXIucHJvdG8itQEKDVJwY1JlcXVlc3RPdXQSDQoFbWFnaWMYASABKAwS",
            "EQoJc2lnbmF0dXJlGAIgASgJEhEKCXRpbWVzdGFtcBgDIAEoAxIMCgR6b25l",
            "GAQgASgJEgsKA2tleRgFIAEoCRIKCgJpcBgGIAEoCRIMCgRwb3J0GAcgASgF",
            "EiwKB2hlYWRlcnMYCCADKAsyGy5BY29ybGUuTW9kZWxzLkhlYWRlcktWUGFp",
            "chIMCgRkYXRhGAkgASgMYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Acorle.Models.HeaderKVPairReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Acorle.Models.RpcRequestOut), global::Acorle.Models.RpcRequestOut.Parser, new[]{ "Magic", "Signature", "Timestamp", "Zone", "Key", "Ip", "Port", "Headers", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 此类是本中心节点向子节点或子节点与子节点业务间调用时发送的请求 
  /// </summary>
  public sealed partial class RpcRequestOut : pb::IMessage<RpcRequestOut>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RpcRequestOut> _parser = new pb::MessageParser<RpcRequestOut>(() => new RpcRequestOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RpcRequestOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Acorle.Models.RpcRequestOutReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RpcRequestOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RpcRequestOut(RpcRequestOut other) : this() {
      magic_ = other.magic_;
      signature_ = other.signature_;
      timestamp_ = other.timestamp_;
      zone_ = other.zone_;
      key_ = other.key_;
      ip_ = other.ip_;
      port_ = other.port_;
      headers_ = other.headers_.Clone();
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RpcRequestOut Clone() {
      return new RpcRequestOut(this);
    }

    /// <summary>Field number for the "magic" field.</summary>
    public const int MagicFieldNumber = 1;
    private pb::ByteString magic_ = pb::ByteString.Empty;
    /// <summary>
    /// 包特征，用于占位及表示是己方协议 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Magic {
      get { return magic_; }
      set {
        magic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    /// <summary>
    /// 请求签名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    /// <summary>
    /// 请求时间戳 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 4;
    private string zone_ = "";
    /// <summary>
    /// Zone ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 5;
    private string key_ = "";
    /// <summary>
    /// 业务 Key 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 6;
    private string ip_ = "";
    /// <summary>
    /// 远程用户IP(当为业务间调用时，可选) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 7;
    private int port_;
    /// <summary>
    /// 远程用户端口(当为业务间调用时，可选) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Acorle.Models.HeaderKVPair> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(66, global::Acorle.Models.HeaderKVPair.Parser);
    private readonly pbc::RepeatedField<global::Acorle.Models.HeaderKVPair> headers_ = new pbc::RepeatedField<global::Acorle.Models.HeaderKVPair>();
    /// <summary>
    /// 远程用户请求 HTTP 标头(当为业务间调用时，可选) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Acorle.Models.HeaderKVPair> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 9;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// 远程用户请求数据或业务间调用数据 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RpcRequestOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RpcRequestOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Magic != other.Magic) return false;
      if (Signature != other.Signature) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Zone != other.Zone) return false;
      if (Key != other.Key) return false;
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Magic.Length != 0) hash ^= Magic.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Magic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Magic);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Zone);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Key);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Port);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (Data.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Magic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Magic);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Zone);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Key);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Port);
      }
      headers_.WriteTo(ref output, _repeated_headers_codec);
      if (Data.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Magic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Magic);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RpcRequestOut other) {
      if (other == null) {
        return;
      }
      if (other.Magic.Length != 0) {
        Magic = other.Magic;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      headers_.Add(other.headers_);
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Magic = input.ReadBytes();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            Zone = input.ReadString();
            break;
          }
          case 42: {
            Key = input.ReadString();
            break;
          }
          case 50: {
            Ip = input.ReadString();
            break;
          }
          case 56: {
            Port = input.ReadInt32();
            break;
          }
          case 66: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 74: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Magic = input.ReadBytes();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            Zone = input.ReadString();
            break;
          }
          case 42: {
            Key = input.ReadString();
            break;
          }
          case 50: {
            Ip = input.ReadString();
            break;
          }
          case 56: {
            Port = input.ReadInt32();
            break;
          }
          case 66: {
            headers_.AddEntriesFrom(ref input, _repeated_headers_codec);
            break;
          }
          case 74: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
